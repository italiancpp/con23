- time: 07:15 - 07:50
  item: "Welcome Message In Track A"
  
- time: 07:50 - 08:40
  item: "Raffaele Rialdi"
  speaker: 
    - "Unreal Engine in C++, from scratch"
  abstract: "The graphic framework Unreal Engine by Epic is one for the most popular and sophisticated game engines to create videogames but, more and more often, it is also used in other fields to build high-quality and stunning graphics interactive applications.
The Unreal Engine learning curve is steep not only because of its large codebase but also because most of the developers use almost exclusively the \"blueprints\" with a graphical editor, with almost no-code.
Behind the scenes there is of course C++ which thankfully is open source, but also very poorly documented. This makes the development process hard, with rare articles and videos showing C++ and its big advantages.
In this session I will tell you my adventure as a novice in this world, how to create objects, the main libraries we can use and how to create animations."

- time: 08:40 - 09:15
  item: "Networking Break"
  
- time: 09:15 - 10:15
  item: "Conan 2.0: lessons learned from the C++ ecosystem"
  speaker:
    - Luis Caro Campos
  abstract: "Developers often look at the package managers of other languages with envy: Python (pip), Java (Maven, Gradle), Javascript (npm), Rust (Cargo). Arguably, the C++ ecosystem has challenges that are unique and not found in other languages, with decades of history. What is holding us back? With Conan, we aim to support this huge ecosystem: multiple build systems, managing and reusing system native libraries, static and dynamic/shared linking, multiple platforms, ability to cross-build, symbol visibility, propagation of usage requirements, and so on. All of these (and more!) place impossibly high expectations on a C++ package manager, in particular when developers want a powerful solution that doesnâ€™t require them to compromise.

This talk will describe and present these different challenges, define the problems, how different platforms and existing solutions like system package managers approach them, discuss potential solutions, and finally connect the dots to the latest Conan 2.0, explaining the rationale behind some of the newer approaches introduced in this recent major release, and why writing a C++ package manager is a bigger challenge than it seems."
  
- time: 10:15 - 11:05
  item: "New Algorithms in C++23"
  speaker: 
    - Conor Hoekstra
  abstract: "C++23 has made a number of very important additions to the Ranges library that was introduced in C++20. This talk will be an overview everything new in the C++23 Ranges library as well as a high level overview of all the different \"types\" of algorithms in C++ (from C++98 to C++23)."
 
- time: 11:05 - 12:15
  item: "Lunch"

- time: 12:15 - 13:15
  item: "C++ and Game Development: the Good, the Bad, and the Ugly"
  speaker: 
    - Maurizio de Pascale
  abstract: "Video games are some of the largest and most complex codebases today, usually measured in millions of lines of codes, with extreme requirements in terms of performance and memory efficiency, and a ton of concurrency sprinkled everywhere.
Game developers also operates in an industry whose tempo is often dictated by strict milestones and unmovable release windows.
These factors make C++ the best friend, but also the worst enemy, of game coders.

This talk will describe the AAA game development industry from a programmer's point of view (tools, environments, habits, processes and so forth), and recommend which bits of the language to embrace and which ones to stay away from. We will share lessons learned in developing a few videogames over the past 15 years.

In particular, we will touch topics like concurrency, debugability, compilation time, memory management, hot-reloading, modern C++, data oriented design and functional style programming.

Finally, we'll discuss what the future of game development might look like, and what are the challenges for C++ to stay relevant as the language of choice for game programmers in the future."


- time: 13:15 - 14:05
  item: "Hello, std::generator"
  speaker: 
    - Alberto Barbati
  abstract: "C++ 23 introduces std::generator, a library facility that allows programmers to write ranges factories using coroutines, similarly to what can already be done in other languages."

- time: 14:05 - 14:40
  item: "Networking Break"

- time: 14:40 - 15:15
  item: "..."
  speaker: 
    - Luxoft

- time: 15:15 - 16:45
  item: "Closing Message In Track A"
